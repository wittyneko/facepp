// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    //apply from: "https://raw.githubusercontent.com/java-moudle/repo/master/install.groovy"
    def properties_name = "properties.groovy"
    def properties_file = file(properties_name)
    def properties_url = 'github/wittyneko/gradle-tools'.gitRepoRaw(properties_name)

    properties_file.with { if (!exists()) new URL(properties_url).download(it) }
    apply from: properties_file
    apply from: "$configPath/config.groovy"
    apply from: "$configPath/dependencies.groovy"

    ext.kotlin_version = '1.3.31'

    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}
subprojects {

    project.plugins.all {
        //println "project $project.name, ${it.getClass().name}"
        switch (it.getClass().name) {
            case 'com.android.build.gradle.AppPlugin':
            case 'com.android.build.gradle.LibraryPlugin':
                //给所有Android模块添加Kotlin插件
                //println "project $project.name, ${it.getClass().name}"

                project.apply plugin: 'kotlin-android'
                project.apply plugin: 'kotlin-kapt'
                project.apply plugin: 'kotlin-android-extensions'

                project.android.sourceSets {
                    main.java.srcDirs = ["src/main/kotlin"] + main.java.srcDirs
                    main.java.srcDirs.each { it.mkdirs() }
                }
                break
        }
    }

    def KAPT = "kapt"
    def KAPT_CAP = KAPT.capitalize()
    def ANNOTATION_PROCESSOR = "annotationProcessor"
    def ANNOTATION_PROCESSOR_CAP = ANNOTATION_PROCESSOR.capitalize()
    project.configurations.all { Configuration conf ->
        def conf_name = conf.name

        // annotationProcessor 转 kapt
        def apt = conf_name.replace(ANNOTATION_PROCESSOR, KAPT).replace(ANNOTATION_PROCESSOR_CAP, KAPT_CAP)
        if (conf_name == ANNOTATION_PROCESSOR || (conf_name.endsWith(ANNOTATION_PROCESSOR_CAP) && !conf_name.startsWith("_"))) {
            //println "$project.name $conf_name, $apt"
            conf.dependencies.all { Dependency dependency ->
                def artifacts = "$dependency.group:$dependency.name:$dependency.version"
                //println "$project.name, $conf_name, $artifacts"
                if (dependency.group != ' androidx.databinding' && dependency.name != 'databinding-compiler') {
                    project.dependencies {
                        "$apt" artifacts
                    }
                }
            }
        }
    }
}

allprojects {
    repositories {
        jcenter()
        google()
//        maven { url 'https://jitpack.io' }
    }
}



task clean(type: Delete) {
    delete rootProject.buildDir
}

ext {

    // SDK And Tools
    MinSdkVersion = 14
    TargetSdkVersion = 28
    CompileSdkVersion = 28
    BuildToolsVersion = '28.0.3'

    //Dependencies
    SupportLibraryVersion = '28.0.+'

}
